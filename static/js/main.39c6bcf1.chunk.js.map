{"version":3,"sources":["routes/mainRoutes.js","components/navigation/NavigationStyled.js","components/navigation/Navigation.js","components/header/HeaderStyled.js","components/header/Header.js","components/main/MainStyled.js","components/main/Main.js","App.js","redux/contacts/contactsReducer.js","redux/store.js","index.js","redux/contacts/contactsActions.js"],"names":["mainRoutes","name","path","component","lazy","exact","private","restricted","NavigationContainer","styled","nav","Navigation","className","map","route","to","activeClassName","toUpperCase","HeaderContainer","header","Header","MainContainer","main","Main","fallback","App","itemsReducer","createReducer","fetchContactsSuccess","_","payload","addContactSuccess","state","deleteContactSuccess","actions","filter","item","id","Number","filterReducer","setFilter","loadingReducer","fetchContactsRequest","fetchContactsError","addContactRequest","addContactError","deleteContactRequest","deleteContactError","contactsReducer","combineReducers","items","loading","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById","createAction"],"mappings":"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","file":"static/js/main.39c6bcf1.chunk.js","sourcesContent":["import { lazy } from \"react\";\r\n\r\nexport const mainRoutes = [\r\n  {\r\n    name: \"Home\",\r\n    path: \"/\",\r\n    component: lazy(\r\n      () => import(\"../pages/HomePage\") /* webpackChunkName:\"HomePage\" */\r\n    ),\r\n    exact: true,\r\n    private: false,\r\n    restricted: false,\r\n  },\r\n  {\r\n    name: \"Contacts\",\r\n    path: \"/contacts\",\r\n    component: lazy(\r\n      () =>\r\n        import(\"../pages/ContactsPage\") /* webpackChunkName:\"ContactsPage\" */\r\n    ),\r\n    exact: true,\r\n    private: true,\r\n    restricted: false,\r\n  },\r\n  {\r\n    name: \"Register\",\r\n    path: \"/register\",\r\n    component: lazy(\r\n      () => import(\"../pages/AuthPage\") /* webpackChunkName:\"AuthPage\" */\r\n    ),\r\n    exact: true,\r\n    private: true,\r\n    restricted: true,\r\n  },\r\n  {\r\n    name: \"Login\",\r\n    path: \"/login\",\r\n    component: lazy(\r\n      () => import(\"../pages/AuthPage\") /* webpackChunkName:\"AuthPage\" */\r\n    ),\r\n    exact: true,\r\n    private: true,\r\n    restricted: true,\r\n  },\r\n];\r\n","import styled from \"styled-components\";\r\n\r\nexport const NavigationContainer = styled.nav`\r\n  .navList {\r\n    display: flex;\r\n\r\n    justify-content: flex-end;\r\n  }\r\n  .navListItem:not(:last-child) {\r\n    margin-right: 20px;\r\n  }\r\n  .navLink {\r\n    text-decoration: none;\r\n    font-weight: 700;\r\n    color: white;\r\n  }\r\n  .navLinkActive {\r\n    color: turquoise;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { mainRoutes } from \"../../routes/mainRoutes\";\r\nimport { NavigationContainer } from \"./NavigationStyled\";\r\n\r\nconst Navigation = () => {\r\n  return (\r\n    <NavigationContainer>\r\n      <ul className=\"navList\">\r\n        {mainRoutes.map((route) => (\r\n          <li className=\"navListItem\" key={route.path}>\r\n            <NavLink\r\n              to={route.path}\r\n              exact={route.exact}\r\n              className=\"navLink\"\r\n              activeClassName=\"navLinkActive\"\r\n            >\r\n              {route.name.toUpperCase()}\r\n            </NavLink>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </NavigationContainer>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import styled from \"styled-components\";\r\n\r\nexport const HeaderContainer = styled.header`\r\n  height: 60px;\r\n  background-color: rgba(21, 36, 34, 0.25);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n  padding: 0 40px;\r\n`;\r\n","import React from \"react\";\r\nimport Navigation from \"../navigation/Navigation\";\r\nimport { HeaderContainer } from \"./HeaderStyled\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <HeaderContainer>\r\n      <Navigation />\r\n    </HeaderContainer>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import styled from \"styled-components\";\r\n\r\nexport const MainContainer = styled.main`\r\n  padding: 20px;\r\n`;\r\n","import React, { Suspense } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { mainRoutes } from \"../../routes/mainRoutes\";\r\nimport { MainContainer } from \"./MainStyled\";\r\n\r\nconst Main = () => {\r\n  return (\r\n    <MainContainer>\r\n      <Suspense fallback={<h2>...loading</h2>}>\r\n        <Switch>\r\n          {mainRoutes.map((route) => (\r\n            <Route\r\n              path={route.path}\r\n              exact={route.exact}\r\n              component={route.component}\r\n              key={route.path}\r\n            />\r\n          ))}\r\n        </Switch>\r\n      </Suspense>\r\n    </MainContainer>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React from \"react\";\n// import Auth from \"./components/auth/Auth\";\n\nimport Header from \"./components/header/Header\";\nimport Main from \"./components/main/Main\";\n\nconst App = () => {\n  return (\n    <>\n      <Header />\n      <Main />\n      {/* <Auth /> */}\n    </>\n  );\n};\n\nexport default App;\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { combineReducers } from \"redux\";\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  setFilter,\r\n} from \"./contactsActions\";\r\n\r\nconst itemsReducer = createReducer([], {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n  //возвращает массив контактов, который записывается поверх (распылять не надо)\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, actions) =>\r\n    state.filter((item) => item.id !== Number(actions.payload)),\r\n});\r\n\r\nconst filterReducer = createReducer(\"\", {\r\n  [setFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loadingReducer = createReducer(false, {\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nconst contactsReducer = combineReducers({\r\n  items: itemsReducer,\r\n  filter: filterReducer,\r\n  loading: loadingReducer,\r\n});\r\n\r\nexport default contactsReducer;\r\n\r\n// ============================================================================\r\n// REDUX-TOOLKIT\r\n// import { createReducer } from \"@reduxjs/toolkit\";\r\n// import { combineReducers } from \"redux\";\r\n// import actions from \"./contactsActions\";\r\n\r\n// // console.log(actions.addContact.type);\r\n// // console.log(actions.deleteContact.type);\r\n// // console.log(actions.setFilter.type);\r\n\r\n// const itemsReducer = createReducer([], {\r\n//   addContactSuccess: (state, { payload }) => [...state, payload],\r\n//   [actions.deleteContact]: (state, { payload }) =>\r\n//     state.filter((item) => item.id !== payload),\r\n// });\r\n\r\n// const filterReducer = createReducer(\"\", {\r\n//   [actions.setFilter]: (_, { payload }) => payload,\r\n// });\r\n\r\n// const contactsReducer = combineReducers({\r\n//   items: itemsReducer,\r\n//   filter: filterReducer,\r\n// });\r\n\r\n// export default contactsReducer;\r\n\r\n// ============================================================================\r\n// // Создай редюсеры контактов и фильтра.\r\n// REDUX\r\n// import { combineReducers } from \"redux\";\r\n// import { ADD_CONTACT, DELETE_CONTACT, SET_FILTER } from \"./phonebookActions\";\r\n\r\n// // state={items:[{name:'', number:''},{name:'', number:''}], filter:''}\r\n\r\n// const itemsReducer = (state = [], { type, payload }) => {\r\n//   // console.log(payload);\r\n//   // console.log(state);\r\n//   switch (type) {\r\n//     case ADD_CONTACT:\r\n//       return [...state, payload];\r\n\r\n//     case DELETE_CONTACT:\r\n//       return state.filter((item) => item.id !== payload);\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// const filterReducer = (state = \"\", action) => {\r\n//   switch (action.type) {\r\n//     case SET_FILTER:\r\n//       return action.payload;\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// const contactsReducer = combineReducers({\r\n//   items: itemsReducer,\r\n//   filter: filterReducer,\r\n// });\r\n\r\n// // const rootReducer = combineReducers({\r\n// //   contacts: contactsReducer,\r\n// // });\r\n\r\n// export default contactsReducer;\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport {\r\n  // persistStore,\r\n  // persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\n// import storage from \"redux-persist/lib/storage\";\r\nimport contactsReducer from \"./contacts/contactsReducer\";\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\n// const persistConfig = {\r\n//   key: \"root\",\r\n//   storage,\r\n//   whitelist: [\"items\"],\r\n// };\r\n// const rootReducer = contactsReducer;\r\n\r\n// const persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst store = configureStore({\r\n  reducer: contactsReducer,\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\n// const persistor = persistStore(store);\r\n\r\nexport default store;\r\n\r\n// ===========================\r\n// json смотреть по ссылке\r\n// http://localhost:4040/contacts\r\n// команда\r\n// npm run api-server","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n// import { PersistGate } from \"redux-persist/integration/react\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport \"modern-normalize/modern-normalize.css\";\nimport store from \"./redux/store\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={<h2>...isloading</h2>} persistor={store.persistor}> */}\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n\n  document.getElementById(\"root\")\n);\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const fetchContactsRequest = createAction(\r\n  \"contacts/fetchContactsRequest\"\r\n);\r\nexport const fetchContactsSuccess = createAction(\r\n  \"contacts/fetchContactsSuccess\"\r\n);\r\nexport const fetchContactsError = createAction(\"contacts/fetchContactsError\");\r\n\r\nexport const addContactRequest = createAction(\"contacts/addContactRequest\");\r\nexport const addContactSuccess = createAction(\"contacts/addContactSuccess\");\r\nexport const addContactError = createAction(\"contacts/addContactError\");\r\n\r\nexport const deleteContactRequest = createAction(\r\n  \"contacts/deleteContactRequest\"\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  \"contacts/deleteContactSuccess\"\r\n);\r\nexport const deleteContactError = createAction(\"contacts/deleteContactError\");\r\n\r\nexport const setFilter = createAction(\"contacts/setFilter\");\r\n\r\n// ==================================================================\r\n// REDUX-TOOLKIT\r\n// import { createAction } from \"@reduxjs/toolkit\";\r\n\r\n// export const addContact = createAction(\"phonebook/addContact\");\r\n// export const deleteContact = createAction(\"phonebook/deleteContact\");\r\n// export const setFilter = createAction(\"phonebook/setFilter\");\r\n\r\n// const actions = { addContact, deleteContact, setFilter };\r\n// export default actions;\r\n\r\n// ==================================================================\r\n// Создай действия (actions) сохранения и удаления контакта, а также обновления фильтра.\r\n// REDUX\r\n// export const ADD_CONTACT = \"phonebook/addContact\";\r\n// export const DELETE_CONTACT = \"phonebook/deleteContact\";\r\n// export const SET_FILTER = \"phonebook/setFilter\";\r\n\r\n// const addContact = (newContact) => ({\r\n//   type: ADD_CONTACT,\r\n//   payload: newContact,\r\n// });\r\n// const deleteContact = (id) => ({ type: DELETE_CONTACT, payload: id });\r\n\r\n// const setFilter = (value) => ({ type: SET_FILTER, payload: value });\r\n// export { addContact, deleteContact, setFilter };\r\n"],"sourceRoot":""}