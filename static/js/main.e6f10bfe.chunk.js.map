{"version":3,"sources":["redux/contacts/contactsActions.js","redux/auth/authSelectors.js","components/navigation/AuthNavStyled.js","components/navigation/AuthNav.js","components/navigation/NavigationStyled.js","components/navigation/Navigation.js","images/user.png","components/navigation/UserMenu.js","components/header/HeaderStyled.js","components/header/Header.js","components/main/MainStyled.js","routes/PrivateRoute.js","routes/PublicRoute.js","components/main/Main.js","App.js","redux/auth/authReducer.js","redux/contacts/contactsReducer.js","redux/store.js","index.js","redux/auth/authOperations.js","redux/auth/authActions.js"],"names":["fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","setFilter","getIsAuthenticated","state","auth","isAuthenticated","getUserName","user","name","AuthNavigationContainer","styled","nav","AuthNav","className","to","exact","activeClassName","NavigationContainer","connect","styles","container","display","alignItems","avatar","marginRight","fontWeight","mapDispatchToProps","onLogout","authOperations","logOut","defaultAvatar","style","src","alt","width","type","onClick","HeaderContainer","header","MainContainer","main","Component","component","redirectTo","routeProps","render","props","restricted","lazyHomePage","lazy","lazyContactsPage","lazyRegisterPage","lazyLoginPage","Main","fallback","color","height","path","App","this","onGetCurrentUser","getCurrentUser","initialUserState","email","userReducer","createReducer","registerSuccess","_","payload","loginSuccess","logoutSuccess","__","getCurrentUserSuccess","tokenReducer","token","errorReducer","registerError","action","loginError","logoutError","getCurrentUserError","isAuthenticatedReducer","authReducer","combineReducers","error","itemsReducer","actions","filter","item","id","Number","filterReducer","loadingReducer","contactsReducer","items","loading","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whiteList","store","configureStore","reducer","persistReducer","contacts","devTools","process","persistor","persistStore","ReactDOM","StrictMode","document","getElementById","axios","defaults","baseURL","headers","common","Authorization","register","credentials","dispatch","a","registerRequest","post","response","data","message","logIn","loginRequest","logoutRequest","getState","persistedToken","getCurrentUserRequest","get"],"mappings":"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","file":"static/js/main.e6f10bfe.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const fetchContactsRequest = createAction(\r\n  \"contacts/fetchContactsRequest\"\r\n);\r\nexport const fetchContactsSuccess = createAction(\r\n  \"contacts/fetchContactsSuccess\"\r\n);\r\nexport const fetchContactsError = createAction(\"contacts/fetchContactsError\");\r\n\r\nexport const addContactRequest = createAction(\"contacts/addContactRequest\");\r\nexport const addContactSuccess = createAction(\"contacts/addContactSuccess\");\r\nexport const addContactError = createAction(\"contacts/addContactError\");\r\n\r\nexport const deleteContactRequest = createAction(\r\n  \"contacts/deleteContactRequest\"\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  \"contacts/deleteContactSuccess\"\r\n);\r\nexport const deleteContactError = createAction(\"contacts/deleteContactError\");\r\n\r\nexport const setFilter = createAction(\"contacts/setFilter\");\r\n\r\n// ==================================================================\r\n// REDUX-TOOLKIT\r\n// import { createAction } from \"@reduxjs/toolkit\";\r\n\r\n// export const addContact = createAction(\"phonebook/addContact\");\r\n// export const deleteContact = createAction(\"phonebook/deleteContact\");\r\n// export const setFilter = createAction(\"phonebook/setFilter\");\r\n\r\n// const actions = { addContact, deleteContact, setFilter };\r\n// export default actions;\r\n\r\n// ==================================================================\r\n// Создай действия (actions) сохранения и удаления контакта, а также обновления фильтра.\r\n// REDUX\r\n// export const ADD_CONTACT = \"phonebook/addContact\";\r\n// export const DELETE_CONTACT = \"phonebook/deleteContact\";\r\n// export const SET_FILTER = \"phonebook/setFilter\";\r\n\r\n// const addContact = (newContact) => ({\r\n//   type: ADD_CONTACT,\r\n//   payload: newContact,\r\n// });\r\n// const deleteContact = (id) => ({ type: DELETE_CONTACT, payload: id });\r\n\r\n// const setFilter = (value) => ({ type: SET_FILTER, payload: value });\r\n// export { addContact, deleteContact, setFilter };\r\n","// export const getIsAuthenticated = (state) => Boolean(state.auth.token);\r\nexport const getIsAuthenticated = (state) => state.auth.isAuthenticated;\r\n\r\nexport const getUserName = (state) => state.auth.user.name;\r\n\r\n// const authSelectors = { getIsAuthenticated, getUserName };\r\n// export default authSelectors;\r\n","import styled from \"styled-components\";\r\n\r\nexport const AuthNavigationContainer = styled.nav`\r\n  .navList {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n  }\r\n  .navListItem:not(:last-child) {\r\n    margin-right: 20px;\r\n  }\r\n  .navLink {\r\n    text-decoration: none;\r\n    font-weight: 700;\r\n    color: white;\r\n  }\r\n  .navLinkActive {\r\n    color: turquoise;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { AuthNavigationContainer } from \"./AuthNavStyled\";\r\n\r\nconst AuthNav = () => (\r\n  <AuthNavigationContainer>\r\n    <ul className=\"navList\">\r\n      <li className=\"navListItem\">\r\n        <NavLink\r\n          to=\"/register\"\r\n          exact\r\n          className=\"navLink\"\r\n          activeClassName=\"navLinkActive\"\r\n        >\r\n          Registration\r\n        </NavLink>\r\n      </li>\r\n      <li className=\"navListItem\">\r\n        <NavLink\r\n          to=\"/login\"\r\n          exact\r\n          className=\"navLink\"\r\n          activeClassName=\"navLinkActive\"\r\n        >\r\n          Login\r\n        </NavLink>\r\n      </li>\r\n    </ul>\r\n  </AuthNavigationContainer>\r\n);\r\n\r\nexport default AuthNav;\r\n","import styled from \"styled-components\";\r\n\r\nexport const NavigationContainer = styled.nav`\r\n  .navList {\r\n    display: flex;\r\n\r\n    justify-content: flex-end;\r\n  }\r\n  .navListItem:not(:last-child) {\r\n    margin-right: 20px;\r\n  }\r\n  .navLink {\r\n    text-decoration: none;\r\n    font-weight: 700;\r\n    color: white;\r\n  }\r\n  .navLinkActive {\r\n    color: turquoise;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\n// import { mainRoutes } from \"../../routes/mainRoutes\";\r\nimport { NavigationContainer } from \"./NavigationStyled\";\r\nimport { getIsAuthenticated } from \"../../redux/auth/authSelectors\";\r\n\r\nconst Navigation = ({ isAuthenticated }) => {\r\n  return (\r\n    <NavigationContainer>\r\n      <ul className=\"navList\">\r\n        <li className=\"navListItem\">\r\n          <NavLink\r\n            to=\"/\"\r\n            exact\r\n            className=\"navLink\"\r\n            activeClassName=\"navLinkActive\"\r\n          >\r\n            Home\r\n          </NavLink>\r\n        </li>\r\n        {isAuthenticated && (\r\n          <li className=\"navListItem\">\r\n            <NavLink\r\n              to=\"/contacts\"\r\n              exact\r\n              className=\"navLink\"\r\n              activeClassName=\"navLinkActive\"\r\n            >\r\n              Contacts\r\n            </NavLink>\r\n          </li>\r\n        )}\r\n      </ul>\r\n    </NavigationContainer>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(Navigation);\r\n\r\n// =====================================\r\n// <ul className=\"navList\">\r\n//     {mainRoutes.map((route) => (\r\n//       <li className=\"navListItem\" key={route.path}>\r\n//         <NavLink\r\n//           to={route.path}\r\n//           exact={route.exact}\r\n//           className=\"navLink\"\r\n//           activeClassName=\"navLinkActive\"\r\n//         >\r\n//           {route.name.toUpperCase()}\r\n//         </NavLink>\r\n//       </li>\r\n//     ))}\r\n//   </ul>\r\n","export default __webpack_public_path__ + \"static/media/user.869a9e23.png\";","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getUserName } from \"../../redux/auth/authSelectors\";\r\nimport authOperations from \"../../redux/auth/authOperations\";\r\nimport defaultAvatar from \"../../images/user.png\";\r\n\r\nconst styles = {\r\n  container: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    marginRight: 4,\r\n  },\r\n  name: {\r\n    fontWeight: 700,\r\n    marginRight: 20,\r\n  },\r\n};\r\n\r\nconst UserMenu = ({ avatar, name, onLogout }) => (\r\n  <div style={styles.container}>\r\n    <img src={avatar} alt={name} width=\"24\" style={styles.avatar} />\r\n    <span style={styles.name}>Welcome, {name}</span>\r\n    <button type=\"button\" onClick={onLogout}>\r\n      Logout\r\n    </button>\r\n  </div>\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  name: getUserName(state),\r\n  avatar: defaultAvatar,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onLogout: authOperations.logOut,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\r\n","import styled from \"styled-components\";\r\n\r\nexport const HeaderContainer = styled.header`\r\n  height: 60px;\r\n  background-color: rgba(21, 36, 34, 0.25);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  text-transform: uppercase;\r\n  letter-spacing: 0.05em;\r\n  padding: 0 30px;\r\n`;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getIsAuthenticated } from \"../../redux/auth/authSelectors\";\r\nimport AuthNav from \"../navigation/AuthNav\";\r\nimport Navigation from \"../navigation/Navigation\";\r\nimport UserMenu from \"../navigation/UserMenu\";\r\nimport { HeaderContainer } from \"./HeaderStyled\";\r\n\r\nconst Header = ({ isAuthenticated }) => {\r\n  return (\r\n    <HeaderContainer>\r\n      <Navigation />\r\n      {isAuthenticated ? <UserMenu /> : <AuthNav />}\r\n      {/* <AuthNav /> */}\r\n    </HeaderContainer>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(Header);\r\n","import styled from \"styled-components\";\r\n\r\nexport const MainContainer = styled.main`\r\n  padding: 20px;\r\n`;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { getIsAuthenticated } from \"../redux/auth/authSelectors\";\r\n\r\n/**\r\n * - Если маршрут приватный и пользователь залогинен, рендерит компонент\r\n * - В противном случае рендерит Redirect на /login\r\n */\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={(props) =>\r\n      isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { getIsAuthenticated } from \"../redux/auth/authSelectors\";\r\n\r\n/**\r\n * - Если маршрут ограниченный, и пользователь залогинен, рендерит редирект на /todos\r\n * - В противном случае рендерит компонент\r\n */\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={(props) =>\r\n      isAuthenticated && routeProps.restricted ? (\r\n        <Redirect to={redirectTo} />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);\r\n","import React, { Suspense } from \"react\";\r\nimport { Switch } from \"react-router-dom\";\r\nimport { MainContainer } from \"./MainStyled\";\r\nimport { lazy } from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport PrivateRoute from \"../../routes/PrivateRoute\";\r\nimport PublicRoute from \"../../routes/PublicRoute\";\r\n// import { mainRoutes } from \"../../routes/mainRoutes\";\r\n\r\nconst lazyHomePage = lazy(\r\n  () => import(\"../../pages/HomePage\") /* webpackChunkName:\"HomePage\" */\r\n);\r\nconst lazyContactsPage = lazy(\r\n  () => import(\"../../pages/ContactsPage\") /* webpackChunkName:\"ContactsPage\" */\r\n);\r\nconst lazyRegisterPage = lazy(\r\n  () => import(\"../../pages/RegisterPage\") /* webpackChunkName:\"RegisterPage\" */\r\n);\r\nconst lazyLoginPage = lazy(\r\n  () => import(\"../../pages/LoginPage\") /* webpackChunkName:\"LoginPage\" */\r\n);\r\n// ======================================\r\n\r\nconst Main = () => {\r\n  return (\r\n    <MainContainer>\r\n      <Suspense\r\n        fallback={\r\n          <Loader type=\"ThreeDots\" color=\"#40e0d0\" height={70} width={70} />\r\n        }\r\n      >\r\n        <Switch>\r\n          {/* {mainRoutes.map((route) => (\r\n         <Route\r\n           path={route.path}\r\n           exact={route.exact}\r\n           component={route.component}\r\n           key={route.path}\r\n          />\r\n         ))} */}\r\n          <PublicRoute path=\"/\" exact component={lazyHomePage} />\r\n          <PrivateRoute\r\n            path=\"/contacts\"\r\n            component={lazyContactsPage}\r\n            redirectTo=\"/\"\r\n          />\r\n          <PublicRoute\r\n            path=\"/register\"\r\n            restricted\r\n            component={lazyRegisterPage}\r\n            redirectTo=\"/contacts\"\r\n          />\r\n          <PublicRoute\r\n            path=\"/login\"\r\n            restricted\r\n            component={lazyLoginPage}\r\n            redirectTo=\"/contacts\"\r\n          />\r\n        </Switch>\r\n      </Suspense>\r\n    </MainContainer>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Header from \"./components/header/Header\";\nimport Main from \"./components/main/Main\";\nimport authOperations from \"./redux/auth/authOperations\";\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onGetCurrentUser();\n  }\n\n  render() {\n    return (\n      <>\n        <Header />\n        <Main />\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  onGetCurrentUser: authOperations.getCurrentUser,\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  // registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  // loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  // logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  // getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n} from \"./authActions\";\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst userReducer = createReducer(initialUserState, {\r\n  [registerSuccess]: (_, { payload }) => payload.user,\r\n  [loginSuccess]: (_, { payload }) => payload.user,\r\n  [logoutSuccess]: (_, __) => initialUserState,\r\n  [getCurrentUserSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst tokenReducer = createReducer(null, {\r\n  [registerSuccess]: (_, { payload }) => payload.token,\r\n  [loginSuccess]: (_, { payload }) => payload.token,\r\n  [logoutSuccess]: () => null,\r\n});\r\n\r\nconst errorReducer = createReducer(null, {\r\n  [registerError]: (_, action) => action.payload,\r\n  [loginError]: (_, action) => action.payload,\r\n  [logoutError]: (_, action) => action.payload,\r\n  [getCurrentUserError]: (_, action) => action.payload,\r\n});\r\n\r\nconst isAuthenticatedReducer = createReducer(false, {\r\n  [registerSuccess]: () => true,\r\n  [loginSuccess]: () => true,\r\n  [getCurrentUserSuccess]: () => true,\r\n  [registerError]: () => false,\r\n  [loginError]: () => false,\r\n  [getCurrentUserError]: () => false,\r\n  [logoutSuccess]: () => false,\r\n});\r\n\r\nconst authReducer = combineReducers({\r\n  user: userReducer,\r\n  isAuthenticated: isAuthenticatedReducer,\r\n  token: tokenReducer,\r\n  error: errorReducer,\r\n});\r\nexport default authReducer;\r\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { combineReducers } from \"redux\";\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  setFilter,\r\n} from \"./contactsActions\";\r\n\r\nconst itemsReducer = createReducer([], {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n  //возвращает массив контактов, который записывается поверх (распылять не надо)\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, actions) =>\r\n    state.filter((item) => item.id !== Number(actions.payload)),\r\n});\r\n\r\nconst filterReducer = createReducer(\"\", {\r\n  [setFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loadingReducer = createReducer(false, {\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nconst contactsReducer = combineReducers({\r\n  items: itemsReducer,\r\n  filter: filterReducer,\r\n  loading: loadingReducer,\r\n});\r\n\r\nexport default contactsReducer;\r\n\r\n// ============================================================================\r\n// REDUX-TOOLKIT\r\n// import { createReducer } from \"@reduxjs/toolkit\";\r\n// import { combineReducers } from \"redux\";\r\n// import actions from \"./contactsActions\";\r\n\r\n// // console.log(actions.addContact.type);\r\n// // console.log(actions.deleteContact.type);\r\n// // console.log(actions.setFilter.type);\r\n\r\n// const itemsReducer = createReducer([], {\r\n//   addContactSuccess: (state, { payload }) => [...state, payload],\r\n//   [actions.deleteContact]: (state, { payload }) =>\r\n//     state.filter((item) => item.id !== payload),\r\n// });\r\n\r\n// const filterReducer = createReducer(\"\", {\r\n//   [actions.setFilter]: (_, { payload }) => payload,\r\n// });\r\n\r\n// const contactsReducer = combineReducers({\r\n//   items: itemsReducer,\r\n//   filter: filterReducer,\r\n// });\r\n\r\n// export default contactsReducer;\r\n\r\n// ============================================================================\r\n// // Создай редюсеры контактов и фильтра.\r\n// REDUX\r\n// import { combineReducers } from \"redux\";\r\n// import { ADD_CONTACT, DELETE_CONTACT, SET_FILTER } from \"./phonebookActions\";\r\n\r\n// // state={items:[{name:'', number:''},{name:'', number:''}], filter:''}\r\n\r\n// const itemsReducer = (state = [], { type, payload }) => {\r\n//   // console.log(payload);\r\n//   // console.log(state);\r\n//   switch (type) {\r\n//     case ADD_CONTACT:\r\n//       return [...state, payload];\r\n\r\n//     case DELETE_CONTACT:\r\n//       return state.filter((item) => item.id !== payload);\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// const filterReducer = (state = \"\", action) => {\r\n//   switch (action.type) {\r\n//     case SET_FILTER:\r\n//       return action.payload;\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// const contactsReducer = combineReducers({\r\n//   items: itemsReducer,\r\n//   filter: filterReducer,\r\n// });\r\n\r\n// // const rootReducer = combineReducers({\r\n// //   contacts: contactsReducer,\r\n// // });\r\n\r\n// export default contactsReducer;\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport authReducer from \"./auth/authReducer\";\r\nimport contactsReducer from \"./contacts/contactsReducer\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\n// const persistConfig = {\r\n//   key: \"root\",\r\n//   storage,\r\n//   whitelist: [\"items\"],\r\n// };\r\n// const rootReducer = contactsReducer;\r\n\r\n// const persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst authPersistConfig = {\r\n  key: \"auth\",\r\n  storage,\r\n  whiteList: [\"token\"],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport \"modern-normalize/modern-normalize.css\";\nimport Loader from \"react-loader-spinner\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate\n        loading={\n          <Loader type=\"ThreeDots\" color=\"#40e0d0\" height={70} width={70} />\n        }\n        persistor={store.persistor}\n      >\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n\n  document.getElementById(\"root\")\n);\n","import axios from \"axios\";\r\nimport {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n} from \"./authActions\";\r\n\r\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com\";\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = \"\";\r\n  },\r\n};\r\n\r\nconst register = (credentials) => async (dispatch) => {\r\n  dispatch(registerRequest());\r\n  try {\r\n    const response = await axios.post(\"/users/signup\", credentials);\r\n    token.set(response.data.token);\r\n    dispatch(registerSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(registerError(error.message));\r\n  }\r\n};\r\n\r\nconst logIn = (credentials) => async (dispatch) => {\r\n  dispatch(loginRequest());\r\n\r\n  try {\r\n    const response = await axios.post(\"/users/login\", credentials);\r\n    token.set(response.data.token);\r\n    dispatch(loginSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(loginError(error.message));\r\n  }\r\n};\r\n\r\nconst logOut = () => async (dispatch) => {\r\n  dispatch(logoutRequest());\r\n  try {\r\n    await axios.post(\"/users/logout\");\r\n    token.unset();\r\n    dispatch(logoutSuccess());\r\n  } catch (error) {\r\n    dispatch(logoutError(error.message));\r\n  }\r\n};\r\n\r\nconst getCurrentUser = () => async (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n\r\n  token.set(persistedToken);\r\n\r\n  dispatch(getCurrentUserRequest());\r\n\r\n  try {\r\n    const response = await axios.get(\"/users/current\");\r\n    dispatch(getCurrentUserSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(getCurrentUserError(error.message));\r\n  }\r\n};\r\n\r\nconst authOperations = { register, logIn, logOut, getCurrentUser };\r\nexport default authOperations;\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const registerRequest = createAction(\"auth/registerRequest\");\r\nexport const registerSuccess = createAction(\"auth/registerSuccess\");\r\nexport const registerError = createAction(\"auth/registerError\");\r\n\r\nexport const loginRequest = createAction(\"auth/loginRequest\");\r\nexport const loginSuccess = createAction(\"auth/loginSuccess\");\r\nexport const loginError = createAction(\"auth/loginError\");\r\n\r\nexport const logoutRequest = createAction(\"auth/logoutRequest\");\r\nexport const logoutSuccess = createAction(\"auth/logoutSuccess\");\r\nexport const logoutError = createAction(\"auth/logoutError\");\r\n\r\nexport const getCurrentUserRequest = createAction(\"auth/getCurrentUserRequest\");\r\nexport const getCurrentUserSuccess = createAction(\"auth/getCurrentUserSuccess\");\r\nexport const getCurrentUserError = createAction(\"auth/getCurrentUserError\");\r\n\r\n// const authActions = {\r\n//   registerRequest,\r\n//   registerSuccess,\r\n//   registerError,\r\n//   loginRequest,\r\n//   loginSuccess,\r\n//   loginError,\r\n//   logoutRequest,\r\n//   logoutSuccess,\r\n//   logoutError,\r\n//   getCurrentUserRequest,\r\n//   getCurrentUserSuccess,\r\n//   getCurrentUserError,\r\n// }\r\n// export default authActions;\r\n"],"sourceRoot":""}